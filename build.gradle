apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'war'

war {
    classpath = classpath.filter { File file ->
        !file.name.contains('tomcat') && !file.name.contains("commons-logging")
    }
}


ext {
    groovyVersion = '2.3.0-beta-2'
    jerseyVersion = '2.7'
    spockVersion = '0.7-groovy-2.0'
    springBootVersion = '1.0.1.RELEASE'
    reactorVersion = '1.0.1.RELEASE'
    logbackVersion = '1.1.2'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenLocal()
    maven { url "http://buildtools.bisnode.com/artifactory/repo" }
}


dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
    compile("org.glassfish.jersey.ext:jersey-spring3:${jerseyVersion}") {
        exclude module: 'junit'
    }
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}"){
        exclude module: 'spring-boot-starter-logging'
    }
    compile ("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"){
        exclude module: 'spring-boot-starter-logging'
    }
    compile "org.projectreactor:reactor-groovy:${reactorVersion}"
    compile "org.projectreactor:reactor-spring:${reactorVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    // Test dependencies
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:${jerseyVersion}"
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}"){
        exclude module: 'spring-boot-starter-logging'
    }
    testCompile "org.spockframework:spock-core:${spockVersion}"
}
